<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="/home/anthony/code/bugreport/bugreport.exe" total="109" failures="2" not-run="0" date="2006-09-06" time="06:21:34">
  <environment nunit-version="2.2.8.0" clr-version="2.0.50727.42" os-version="Unix 2.6.15.26" platform="Unix" cwd="/home/anthony/code/bugreport/lib/nunit" machine-name="rupert" user="anthony" user-domain="rupert" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="/home/anthony/code/bugreport/bugreport.exe" success="False" time="0.374" asserts="0">
    <results>
      <test-suite name="/home/anthony/code/bugreport/bugreport.exe" success="False" time="0.340" asserts="0">
        <results>
          <test-suite name="bugreport" success="False" time="0.312" asserts="0">
            <results>
              <test-suite name="bugreport.AbstractBufferTests" success="True" time="0.026" asserts="0">
                <results>
                  <test-case name="bugreport.AbstractBufferTests.PointerAdd" executed="True" success="True" time="0.006" asserts="2" />
                  <test-case name="bugreport.AbstractBufferTests.PointerAnd" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="bugreport.AbstractBufferTests.PointerSub" executed="True" success="True" time="0.001" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="bugreport.AbstractValueTests" success="True" time="0.038" asserts="0">
                <results>
                  <test-case name="bugreport.AbstractValueTests.AddTaint" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.AssignmentAtByteZero" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.AbstractValueTests.AssignmentAtEnd" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForAdd" executed="True" success="True" time="0.002" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForAnd" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForAssignment" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForPointerAnd" executed="True" success="True" time="0.001" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForShl" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForShr" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForSub" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.AbstractValueTests.DoOperationForUnknown" executed="True" success="True" time="0.008" asserts="0" />
                  <test-case name="bugreport.AbstractValueTests.PointerArith" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.AbstractValueTests.PointerOverflowByOne" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="bugreport.AbstractValueTests.TruncateValue" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.AbstractValueTests.ZeroSizeBuffer" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="bugreport.BitMathTests" success="True" time="0.011" asserts="0">
                <results>
                  <test-case name="bugreport.BitMathTests.AllZeroes" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.BitMathTests.EmptyBytes" executed="True" success="True" time="0.002" asserts="0" />
                  <test-case name="bugreport.BitMathTests.NotEnoughBytesToDwordAtNonZeroIndex" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="bugreport.BitMathTests.NotEnoughBytesToDwordAtZeroIndex" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="bugreport.BitMathTests.OneTwoThreeFour" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="bugreport.DumpFileParserTests" success="True" time="0.043" asserts="0">
                <results>
                  <test-suite name="bugreport.DumpFileParserTests.MainAfterNonMainTests" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="bugreport.DumpFileParserTests.MainAfterNonMainTests.CurrentLine" executed="True" success="True" time="0.010" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.MainAfterNonMainTests.MainIsLastFunction" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.MainAfterNonMainTests.MainIsNotLastFunction" executed="True" success="True" time="0.001" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="bugreport.DumpFileParserTests.WithMainOnlyTests" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.HasColonButNoHex" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.HasColonNothingElse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.LineWithBadHex" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.LineWithMuchoHex" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.LineWithMultipleHex" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.LineWithSingleHex" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.LineWithSpaceTab" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="bugreport.DumpFileParserTests.WithMainOnlyTests.NextLineSkipsBadLines" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="bugreport.DumpFileParserTests.WithNoMainTests" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="bugreport.DumpFileParserTests.WithNoMainTests.LineWithSingleHex" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="bugreport.DumpFileParserTests.WithNothingElseTests" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="bugreport.DumpFileParserTests.WithNothingElseTests.CurrentLineBeforeFirstBytes" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="bugreport.DumpFileParserTests.WithNothingElseTests.EmptyLine" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="bugreport.InterpreterTests" success="True" time="0.069" asserts="0">
                <results>
                  <test-case name="bugreport.InterpreterTests.AddImmediateToEAX" executed="True" success="True" time="0.010" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.Call" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.DefaultValues" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.InterpreterTests.EmptyCodeArray" executed="True" success="True" time="0.000" asserts="0" />
                  <test-case name="bugreport.InterpreterTests.InitialRegisters" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.InvalidOpcode" executed="True" success="True" time="0.001" asserts="0" />
                  <test-case name="bugreport.InterpreterTests.LeaEdxFromEaxPlus16" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovBytePtrEaxInBounds" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovBytePtrEaxPlus16FromBl" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovDwordPtrEaxPlus16FromEbx" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovEax0x0" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.MovEax0x10" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovEax0xXXXXXXXX" executed="True" success="True" time="0.002" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.MovEaxEaxFourByteValue" executed="True" success="True" time="0.001" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.MovEaxEaxPointerPointerValue" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.MovEaxEbpPlusTwelve" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.MovEbpEsp" executed="True" success="True" time="0.001" asserts="4" />
                  <test-case name="bugreport.InterpreterTests.MovEbpMinus8" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovEsp0xXXXXXXXX" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.MovIntoAssignedEaxInBounds" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovIntoAssignedEaxOutOfBounds" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovIntoEdxFromOffset" executed="True" success="True" time="0.002" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovIntoOffsetFromAl" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovIntoUnassignedEax" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.MovPtrEsp0x10" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.InterpreterTests.MovPtrEspEax" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.PushEbp" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.InterpreterTests.PushEbx" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.InterpreterTests.ReturnValueIsAliasedToEax" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.InterpreterTests.Sub" executed="True" success="True" time="0.000" asserts="3" />
                </results>
              </test-suite>
              <test-suite name="bugreport.MainTests" success="False" time="0.020" asserts="0">
                <results>
                  <test-case name="bugreport.MainTests.GetParserFileDoesNotExist" executed="True" success="True" time="0.005" asserts="1" />
                  <test-case name="bugreport.MainTests.GetParserFileExists" executed="True" success="False" time="0.006" asserts="1">
                    <failure>
                      <message><![CDATA[]]></message>
                      <stack-trace><![CDATA[  at bugreport.MainTests.GetParserFileExists () [0x00006] in /home/anthony/code/bugreport/MainTests.cs:29 
  at <0x00000> <unknown method>
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[])
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00056] in /tmp/scratch/BUILD/mono-1.1.17.1/mcs/class/corlib/System.Reflection/MonoMethod.cs:135 
]]></stack-trace>
                    </failure>
                  </test-case>
                  <test-case name="bugreport.MainTests.SystemTest" executed="True" success="False" time="0.002" asserts="0">
                    <failure>
                      <message><![CDATA[System.IO.FileNotFoundException : File not found.]]></message>
                      <stack-trace><![CDATA[  at System.IO.StreamReader..ctor (System.String path, System.Text.Encoding encoding, Boolean detect_encoding_from_bytemarks, Int32 buffer_size) [0x000d9] in /tmp/scratch/BUILD/mono-1.1.17.1/mcs/class/corlib/System.IO/StreamReader.cs:172 
  at System.IO.StreamReader..ctor (System.String path) [0x00000] in /tmp/scratch/BUILD/mono-1.1.17.1/mcs/class/corlib/System.IO/StreamReader.cs:140 
  at (wrapper remoting-invoke-with-check) System.IO.StreamReader:.ctor (string)
  at System.IO.File.OpenText (System.String path) [0x00000] in /tmp/scratch/BUILD/mono-1.1.17.1/mcs/class/corlib/System.IO/File.cs:354 
  at System.IO.File.ReadAllLines (System.String path) [0x00000] in /tmp/scratch/BUILD/mono-1.1.17.1/mcs/class/corlib/System.IO/File.cs:481 
  at bugreport.MainTests.SystemTest () [0x00000] in /home/anthony/code/bugreport/MainTests.cs:35 
  at <0x00000> <unknown method>
  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[])
  at System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00056] in /tmp/scratch/BUILD/mono-1.1.17.1/mcs/class/corlib/System.Reflection/MonoMethod.cs:135 
]]></stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite name="bugreport.ModRMTests" success="True" time="0.029" asserts="0">
                <results>
                  <test-case name="bugreport.ModRMTests.EaxEaxNoIndex" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="bugreport.ModRMTests.EaxEbpPlusDword12" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.ModRMTests.EaxEbpPlusSByte12" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.ModRMTests.EaxEbx4" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.ModRMTests.EbxEbp12" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="bugreport.ModRMTests.EbxEsp0" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.ModRMTests.EdiEbp4" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.ModRMTests.EsiEbp8" executed="True" success="True" time="0.000" asserts="3" />
                  <test-case name="bugreport.ModRMTests.EvGvSIBNoIndexToEspFromEax" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.ModRMTests.GetEVWithHasSIB" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.ModRMTests.GetIndexWithNoIndex" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.ModRMTests.GvEbOffsetToRegister" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="bugreport.ModRMTests.MovEbpEsp" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="bugreport.ModRMTests.MovEsp0x10" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.ModRMTests.TwoByteWithModRMNoIndex" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="bugreport.ModRMTests.TwoByteWithModRMWithIndex" executed="True" success="True" time="0.000" asserts="4" />
                  <test-case name="bugreport.ModRMTests.TwoByteWithModRMWithOnlyOffset" executed="True" success="True" time="0.000" asserts="4" />
                </results>
              </test-suite>
              <test-suite name="bugreport.OpcodeHelperTests" success="True" time="0.035" asserts="0">
                <results>
                  <test-case name="bugreport.OpcodeHelperTests.EbGb" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.EbIb" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.OpcodeHelperTests.EvGv" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.OpcodeHelperTests.EvGvSub" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.EvIbAdd" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.EvIbAnd" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.EvIbShl" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.EvIbShr" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.EvIbSub" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.EvIz" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.OpcodeHelperTests.GvEbOffsetToRegister" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.GvEbRegisterToRegister" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.GvEv" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.OpcodeHelperTests.GvM" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.Jz" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.OpcodeHelperTests.None" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.OpcodeHelperTests.ObAL" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.PushrBP" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.PushrBX" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.rAxOv" executed="True" success="True" time="0.000" asserts="2" />
                  <test-case name="bugreport.OpcodeHelperTests.RAXIv" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="bugreport.OpcodeHelperTests.UnknownOpcode" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>