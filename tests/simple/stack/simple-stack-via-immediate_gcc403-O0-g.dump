
simple-stack-via-immediate_gcc403-O0-g:     file format elf32-i386

Disassembly of section .init:

0804825c <_init>:
 804825c:	55                   	push   ebp
 804825d:	89 e5                	mov    ebp,esp
 804825f:	83 ec 08             	sub    esp,0x8
 8048262:	e8 6d 00 00 00       	call   80482d4 <call_gmon_start>
 8048267:	e8 bb 00 00 00       	call   8048327 <frame_dummy>
 804826c:	e8 e3 01 00 00       	call   8048454 <__do_global_ctors_aux>
 8048271:	c9                   	leave  
 8048272:	c3                   	ret    
Disassembly of section .plt:

08048274 <__libc_start_main@plt-0x10>:
 8048274:	ff 35 8c 95 04 08    	push   DWORD PTR ds:0x804958c
 804827a:	ff 25 90 95 04 08    	jmp    DWORD PTR ds:0x8049590
 8048280:	00 00                	add    BYTE PTR [eax],al
	...

08048284 <__libc_start_main@plt>:
 8048284:	ff 25 94 95 04 08    	jmp    DWORD PTR ds:0x8049594
 804828a:	68 00 00 00 00       	push   0x0
 804828f:	e9 e0 ff ff ff       	jmp    8048274 <_init+0x18>

08048294 <__gmon_start__@plt>:
 8048294:	ff 25 98 95 04 08    	jmp    DWORD PTR ds:0x8049598
 804829a:	68 08 00 00 00       	push   0x8
 804829f:	e9 d0 ff ff ff       	jmp    8048274 <_init+0x18>
Disassembly of section .text:

080482b0 <_start>:
 80482b0:	31 ed                	xor    ebp,ebp
 80482b2:	5e                   	pop    esi
 80482b3:	89 e1                	mov    ecx,esp
 80482b5:	83 e4 f0             	and    esp,0xfffffff0
 80482b8:	50                   	push   eax
 80482b9:	54                   	push   esp
 80482ba:	52                   	push   edx
 80482bb:	68 f0 83 04 08       	push   0x80483f0
 80482c0:	68 80 83 04 08       	push   0x8048380
 80482c5:	51                   	push   ecx
 80482c6:	56                   	push   esi
 80482c7:	68 4c 83 04 08       	push   0x804834c
 80482cc:	e8 b3 ff ff ff       	call   8048284 <__libc_start_main@plt>
 80482d1:	f4                   	hlt    
 80482d2:	90                   	nop    
 80482d3:	90                   	nop    

080482d4 <call_gmon_start>:
 80482d4:	55                   	push   ebp
 80482d5:	89 e5                	mov    ebp,esp
 80482d7:	53                   	push   ebx
 80482d8:	51                   	push   ecx
 80482d9:	e8 00 00 00 00       	call   80482de <call_gmon_start+0xa>
 80482de:	5b                   	pop    ebx
 80482df:	81 c3 aa 12 00 00    	add    ebx,0x12aa
 80482e5:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 80482eb:	85 d2                	test   edx,edx
 80482ed:	74 05                	je     80482f4 <call_gmon_start+0x20>
 80482ef:	e8 a0 ff ff ff       	call   8048294 <__gmon_start__@plt>
 80482f4:	58                   	pop    eax
 80482f5:	5b                   	pop    ebx
 80482f6:	c9                   	leave  
 80482f7:	c3                   	ret    

080482f8 <__do_global_dtors_aux>:
 80482f8:	55                   	push   ebp
 80482f9:	89 e5                	mov    ebp,esp
 80482fb:	83 ec 08             	sub    esp,0x8
 80482fe:	80 3d a8 95 04 08 00 	cmp    BYTE PTR ds:0x80495a8,0x0
 8048305:	74 0c                	je     8048313 <__do_global_dtors_aux+0x1b>
 8048307:	eb 1c                	jmp    8048325 <__do_global_dtors_aux+0x2d>
 8048309:	83 c0 04             	add    eax,0x4
 804830c:	a3 a4 95 04 08       	mov    ds:0x80495a4,eax
 8048311:	ff d2                	call   edx
 8048313:	a1 a4 95 04 08       	mov    eax,ds:0x80495a4
 8048318:	8b 10                	mov    edx,DWORD PTR [eax]
 804831a:	85 d2                	test   edx,edx
 804831c:	75 eb                	jne    8048309 <__do_global_dtors_aux+0x11>
 804831e:	c6 05 a8 95 04 08 01 	mov    BYTE PTR ds:0x80495a8,0x1
 8048325:	c9                   	leave  
 8048326:	c3                   	ret    

08048327 <frame_dummy>:
 8048327:	55                   	push   ebp
 8048328:	89 e5                	mov    ebp,esp
 804832a:	83 ec 08             	sub    esp,0x8
 804832d:	a1 b8 94 04 08       	mov    eax,ds:0x80494b8
 8048332:	85 c0                	test   eax,eax
 8048334:	74 12                	je     8048348 <frame_dummy+0x21>
 8048336:	b8 00 00 00 00       	mov    eax,0x0
 804833b:	85 c0                	test   eax,eax
 804833d:	74 09                	je     8048348 <frame_dummy+0x21>
 804833f:	c7 04 24 b8 94 04 08 	mov    DWORD PTR [esp],0x80494b8
 8048346:	ff d0                	call   eax
 8048348:	c9                   	leave  
 8048349:	c3                   	ret    
 804834a:	90                   	nop    
 804834b:	90                   	nop    

0804834c <main>:
#include <stdlib.h>

int main(int argc, char **argv)
{
 804834c:	55                   	push   ebp
 804834d:	89 e5                	mov    ebp,esp
 804834f:	83 ec 28             	sub    esp,0x28
 8048352:	83 e4 f0             	and    esp,0xfffffff0
 8048355:	b8 00 00 00 00       	mov    eax,0x0
 804835a:	83 c0 0f             	add    eax,0xf
 804835d:	83 c0 0f             	add    eax,0xf
 8048360:	c1 e8 04             	shr    eax,0x4
 8048363:	c1 e0 04             	shl    eax,0x4
 8048366:	29 c4                	sub    esp,eax
	size_t size = 16;
 8048368:	c7 45 fc 10 00 00 00 	mov    DWORD PTR [ebp-4],0x10
	char p[16];
	p[15] = 0;
 804836f:	c6 45 fb 00          	mov    BYTE PTR [ebp-5],0x0
}
 8048373:	c9                   	leave  
 8048374:	c3                   	ret    
 8048375:	90                   	nop    
 8048376:	90                   	nop    
 8048377:	90                   	nop    
 8048378:	90                   	nop    
 8048379:	90                   	nop    
 804837a:	90                   	nop    
 804837b:	90                   	nop    
 804837c:	90                   	nop    
 804837d:	90                   	nop    
 804837e:	90                   	nop    
 804837f:	90                   	nop    

08048380 <__libc_csu_init>:
 8048380:	55                   	push   ebp
 8048381:	89 e5                	mov    ebp,esp
 8048383:	83 ec 18             	sub    esp,0x18
 8048386:	89 5d f4             	mov    DWORD PTR [ebp-12],ebx
 8048389:	e8 bf 00 00 00       	call   804844d <__i686.get_pc_thunk.bx>
 804838e:	81 c3 fa 11 00 00    	add    ebx,0x11fa
 8048394:	89 75 f8             	mov    DWORD PTR [ebp-8],esi
 8048397:	89 7d fc             	mov    DWORD PTR [ebp-4],edi
 804839a:	e8 bd fe ff ff       	call   804825c <_init>
 804839f:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 80483a5:	8d 93 20 ff ff ff    	lea    edx,[ebx-0xe0]
 80483ab:	29 d0                	sub    eax,edx
 80483ad:	c1 f8 02             	sar    eax,0x2
 80483b0:	89 45 f0             	mov    DWORD PTR [ebp-16],eax
 80483b3:	75 0d                	jne    80483c2 <__libc_csu_init+0x42>
 80483b5:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-12]
 80483b8:	8b 75 f8             	mov    esi,DWORD PTR [ebp-8]
 80483bb:	8b 7d fc             	mov    edi,DWORD PTR [ebp-4]
 80483be:	89 ec                	mov    esp,ebp
 80483c0:	5d                   	pop    ebp
 80483c1:	c3                   	ret    
 80483c2:	31 ff                	xor    edi,edi
 80483c4:	89 d6                	mov    esi,edx
 80483c6:	8d 76 00             	lea    esi,[esi]
 80483c9:	8d bc 27 00 00 00 00 	lea    edi,[edi]
 80483d0:	47                   	inc    edi
 80483d1:	ff 16                	call   DWORD PTR [esi]
 80483d3:	83 c6 04             	add    esi,0x4
 80483d6:	3b 7d f0             	cmp    edi,DWORD PTR [ebp-16]
 80483d9:	72 f5                	jb     80483d0 <__libc_csu_init+0x50>
 80483db:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-12]
 80483de:	8b 75 f8             	mov    esi,DWORD PTR [ebp-8]
 80483e1:	8b 7d fc             	mov    edi,DWORD PTR [ebp-4]
 80483e4:	89 ec                	mov    esp,ebp
 80483e6:	5d                   	pop    ebp
 80483e7:	c3                   	ret    
 80483e8:	90                   	nop    
 80483e9:	8d b4 26 00 00 00 00 	lea    esi,[esi]

080483f0 <__libc_csu_fini>:
 80483f0:	55                   	push   ebp
 80483f1:	89 e5                	mov    ebp,esp
 80483f3:	83 ec 18             	sub    esp,0x18
 80483f6:	89 5d f4             	mov    DWORD PTR [ebp-12],ebx
 80483f9:	e8 4f 00 00 00       	call   804844d <__i686.get_pc_thunk.bx>
 80483fe:	81 c3 8a 11 00 00    	add    ebx,0x118a
 8048404:	89 75 f8             	mov    DWORD PTR [ebp-8],esi
 8048407:	89 7d fc             	mov    DWORD PTR [ebp-4],edi
 804840a:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 8048410:	8d 93 20 ff ff ff    	lea    edx,[ebx-0xe0]
 8048416:	29 d0                	sub    eax,edx
 8048418:	c1 f8 02             	sar    eax,0x2
 804841b:	89 45 f0             	mov    DWORD PTR [ebp-16],eax
 804841e:	48                   	dec    eax
 804841f:	83 f8 ff             	cmp    eax,0xffffffff
 8048422:	74 17                	je     804843b <__libc_csu_fini+0x4b>
 8048424:	8d 34 82             	lea    esi,[edx+eax*4]
 8048427:	31 ff                	xor    edi,edi
 8048429:	8d b4 26 00 00 00 00 	lea    esi,[esi]
 8048430:	47                   	inc    edi
 8048431:	ff 16                	call   DWORD PTR [esi]
 8048433:	83 ee 04             	sub    esi,0x4
 8048436:	39 7d f0             	cmp    DWORD PTR [ebp-16],edi
 8048439:	75 f5                	jne    8048430 <__libc_csu_fini+0x40>
 804843b:	e8 40 00 00 00       	call   8048480 <_fini>
 8048440:	8b 5d f4             	mov    ebx,DWORD PTR [ebp-12]
 8048443:	8b 75 f8             	mov    esi,DWORD PTR [ebp-8]
 8048446:	8b 7d fc             	mov    edi,DWORD PTR [ebp-4]
 8048449:	89 ec                	mov    esp,ebp
 804844b:	5d                   	pop    ebp
 804844c:	c3                   	ret    

0804844d <__i686.get_pc_thunk.bx>:
 804844d:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048450:	c3                   	ret    
 8048451:	90                   	nop    
 8048452:	90                   	nop    
 8048453:	90                   	nop    

08048454 <__do_global_ctors_aux>:
 8048454:	55                   	push   ebp
 8048455:	89 e5                	mov    ebp,esp
 8048457:	53                   	push   ebx
 8048458:	83 ec 04             	sub    esp,0x4
 804845b:	a1 a8 94 04 08       	mov    eax,ds:0x80494a8
 8048460:	83 f8 ff             	cmp    eax,0xffffffff
 8048463:	74 12                	je     8048477 <__do_global_ctors_aux+0x23>
 8048465:	bb a8 94 04 08       	mov    ebx,0x80494a8
 804846a:	ff d0                	call   eax
 804846c:	8b 43 fc             	mov    eax,DWORD PTR [ebx-4]
 804846f:	83 eb 04             	sub    ebx,0x4
 8048472:	83 f8 ff             	cmp    eax,0xffffffff
 8048475:	75 f3                	jne    804846a <__do_global_ctors_aux+0x16>
 8048477:	83 c4 04             	add    esp,0x4
 804847a:	5b                   	pop    ebx
 804847b:	5d                   	pop    ebp
 804847c:	c3                   	ret    
 804847d:	90                   	nop    
 804847e:	90                   	nop    
 804847f:	90                   	nop    
Disassembly of section .fini:

08048480 <_fini>:
 8048480:	55                   	push   ebp
 8048481:	89 e5                	mov    ebp,esp
 8048483:	53                   	push   ebx
 8048484:	50                   	push   eax
 8048485:	e8 00 00 00 00       	call   804848a <_fini+0xa>
 804848a:	5b                   	pop    ebx
 804848b:	81 c3 fe 10 00 00    	add    ebx,0x10fe
 8048491:	e8 62 fe ff ff       	call   80482f8 <__do_global_dtors_aux>
 8048496:	58                   	pop    eax
 8048497:	5b                   	pop    ebx
 8048498:	c9                   	leave  
 8048499:	c3                   	ret    
